/**
 * 
 * @author Mark Griffiths
 * Date: 11/17/2019
 * Class: CSC 151
 * Purpose: To use the TestScores class to catch exceptions generated by bad input
 *
 */
import java.util.*;
import java.util.Scanner;
public class GriffithsTestScoresDemo {

	public static void main(String[] args) {
		GriffithsTestScores scores1 = new GriffithsTestScores();
		boolean retry = false;
		
		scores1.setName(getUserName());
		
		/**
		 * Handles exceptions for grades over 10, and non numeric input
		 */
		while(!retry) {
		try {
			scores1.setNumScores(getNumGrades());
			retry = true;
			}
		catch(IllegalArgumentException e) {

			}
		catch(InputMismatchException e) {
			System.out.println("Please enter only numbers.");
			}
		};
	
		
		/**
		 * handles exceptions for grades not between 0-100, and  for non digit entries
		 */
		while(retry) {
		try {		
			scores1.setTestScores(enterGrades(scores1.numScores));
			retry = false;
			}
		catch(IllegalArgumentException e) {
		
			}
		catch(InputMismatchException e) {
			System.out.println("Please enter only numbers.");
			}
		};
		
		System.out.println(scores1.toString());
		
	}
	
	
	/**
	 * Gets the user input for name and returns the string
	 * @return
	 */
	public static String getUserName() {
		String studentName;
		Scanner keyboard = new Scanner(System.in);
		
		System.out.println("Enter the name of the Student: ");
		studentName = keyboard.nextLine();
		
		
		return studentName;
	}
	
	/**
	 * gets the number of grades to enter, max set at 10, throws exception for more than 10
	 * @return
	 */
	public static int getNumGrades() {
		int numGrades;
		int maxGrades = 10;
		Scanner keyboard = new Scanner(System.in);
		
		System.out.println("Enter the number of grades to enter: ");
		numGrades = keyboard.nextInt();
		
		if(numGrades > maxGrades) {
			System.out.println("Please enter a maximum of 10 grades.");
			throw new IllegalArgumentException(
				"Please enter a maximum of 10 grades.");
		}
		
		
		return numGrades;
	}
	
	/**
	 * takes numgrades to create an array that size, asks for grades to populate array, returns the array.
	 * Throws exception for invalid grades
	 * @param numGrades
	 * @return
	 */
	public static double[] enterGrades(int numGrades) {
		double newGrades[] = new double[numGrades];
		double grade; 
		Scanner keyboard = new Scanner(System.in);
		
		for(int i = 0; i < numGrades; i ++) {
			System.out.println("Enter grade " + (i+1) + ": ");
			grade = keyboard.nextDouble();
			if(grade > 0 && grade <= 100) {
				newGrades[i] = grade;
			}
			else {
				System.out.println("Please enter only positive numbers less than 100.");
				throw new IllegalArgumentException(
						"Positive numbers under 100 only.");
			}
		}
		
		
		return newGrades;
	}
	
	
}
